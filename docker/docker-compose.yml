version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: componentary_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: componentary
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - componentary-network

  # MongoDB Web UI
  mongo-express:
    image: mongo-express:1.0.2
    container_name: componentary_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - componentary-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: componentary_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - componentary-network

  # Redis Web UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: componentary_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: redis:redis123@redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
      REDIS_DB: 0
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - componentary-network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: componentary_neo4j
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/neo4j123
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - componentary-network

  # Backend Server
  server:
    build:
      context: ../server
      dockerfile: Dockerfile
    container_name: componentary_server
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGO_URI: mongodb://admin:password123@mongo:27017/componentary?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: neo4j123
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:5000
    ports:
      - "3001:3001"
    volumes:
      - ../server:/app
      - /app/node_modules
    depends_on:
      - mongo
      - redis
      - neo4j
    networks:
      - componentary-network

  # Frontend Client
  client:
    build:
      context: ../client
      dockerfile: Dockerfile
    container_name: componentary_client
    restart: unless-stopped
    environment:
      VITE_API_URL: http://server:3001
      VITE_WS_URL: ws://server:3001
    ports:
      - "5000:5000"
    volumes:
      - ../client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - componentary-network

volumes:
  mongo_data:
  redis_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  componentary-network:
    driver: bridge